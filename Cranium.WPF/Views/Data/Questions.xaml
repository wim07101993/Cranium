<data:AUserControlWithDataGrid
    x:Class="Cranium.WPF.Views.Data.Questions"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="clr-namespace:Cranium.WPF.Views.Data"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Cranium.Data.RestClient.Models;assembly=Cranium.Data.RestClient"
    xmlns:validationRules="clr-namespace:Cranium.WPF.ValidationRules"
    xmlns:viewModels="clr-namespace:Cranium.WPF.ViewModels"
    d:DataContext="{d:DesignInstance viewModels:IQuestionsViewModel}"
    mc:Ignorable="d">
    <Grid>
        <ItemsControl Margin="12" ItemsSource="{Binding ItemsSource}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type models:Question}">
                    <Grid>
                        <Button
                            Margin="0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Panel.ZIndex="5"
                            Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type data:Questions}}}"
                            CommandParameter="{Binding}"
                            Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}">
                            <Button.Background>
                                <SolidColorBrush Color="{StaticResource RedPrimary800}" />
                            </Button.Background>
                            <materialDesign:PackIcon Kind="Delete" />
                        </Button>

                        <materialDesign:Card
                            Height="Auto"
                            MinWidth="200"
                            Margin="12,16,16,12"
                            Background="{DynamicResource MaterialDesignPaper}">
                            <StackPanel>

                                <Border VerticalAlignment="Top" Background="{Binding QuestionType.Category.Color, Converter={StaticResource ColorToSolidColorBrushConverter}}">
                                    <TextBlock
                                        Margin="12"
                                        HorizontalAlignment="Center"
                                        Foreground="{DynamicResource MaterialDesignBackground}"
                                        Style="{StaticResource MaterialDesignSubheadingTextBlock}"
                                        Text="{Binding QuestionType.Name}" />
                                </Border>

                                <StackPanel Margin="16,8,16,16" VerticalAlignment="Center">
                                    <TextBox
                                        Margin="0,16,0,0"
                                        materialDesign:HintAssist.Hint="{Binding DataContext.Strings.Task, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type data:Questions}}}"
                                        FontSize="16"
                                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                        TextWrapping="Wrap">
                                        <TextBox.Text>
                                            <Binding Path="Task" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <validationRules:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>

                                    <TextBox
                                        Margin="0,16,0,0"
                                        materialDesign:HintAssist.Hint="{Binding DataContext.Strings.Tip, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type data:Questions}}}"
                                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                        Text="{Binding Tip, UpdateSourceTrigger=PropertyChanged}"
                                        TextWrapping="Wrap" />
                                </StackPanel>

                                <Expander Header="{Binding DataContext.Strings.More, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type data:Questions}}}">
                                    <StackPanel Margin="16,8,16,16" VerticalAlignment="Center">
                                        <ComboBox
                                            MinWidth="72"
                                            Margin="0,-20,0,16"
                                            HorizontalAlignment="Stretch"
                                            materialDesign:HintAssist.Hint="{Binding DataContext.Strings.Category, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type data:Questions}}}"
                                            ItemsSource="{Binding DataContext.QuestionTypes, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type data:Questions}}, UpdateSourceTrigger=PropertyChanged}"
                                            SelectedItem="{Binding QuestionType}"
                                            Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                            <ComboBox.Text>
                                                <Binding
                                                    Mode="TwoWay"
                                                    Path="QuestionType"
                                                    UpdateSourceTrigger="PropertyChanged">
                                                    <Binding.ValidationRules>
                                                        <validationRules:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </ComboBox.Text>
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate DataType="{x:Type models:Category}">
                                                    <TextBlock Text="{Binding Name}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <DataGrid
                                            Width="200"
                                            Margin="0,6,0,0"
                                            AutoGenerateColumns="False"
                                            CanUserAddRows="True"
                                            HeadersVisibility="None"
                                            ItemsSource="{Binding Answers}">
                                            <DataGrid.Columns>
                                                <DataGridCheckBoxColumn
                                                    Binding="{Binding IsCorrect}"
                                                    EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                                    ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}" />
                                                <DataGridTemplateColumn>
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Value}" />
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                    <DataGridTemplateColumn.CellEditingTemplate>
                                                        <DataTemplate>
                                                            <TextBox Text="{Binding Value}" />
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellEditingTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </StackPanel>
                                </Expander>
                            </StackPanel>
                        </materialDesign:Card>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <materialDesign:PopupBox
            Margin="32"
            HorizontalAlignment="Right"
            VerticalAlignment="Bottom"
            Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}">
            <StackPanel>
                <Button Command="{Binding SaveCommand}" Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource BluePrimary800}" />
                    </Button.Background>
                    <materialDesign:PackIcon Kind="ContentSave" />
                </Button>
                <Button Command="{Binding CreateCommand}" Foreground="{DynamicResource SecondaryAccentForegroundBrush}">
                    <Button.Background>
                        <SolidColorBrush Color="{StaticResource LimePrimary800}" />
                    </Button.Background>
                    <materialDesign:PackIcon Kind="Add" />
                </Button>
            </StackPanel>
        </materialDesign:PopupBox>
    </Grid>
</data:AUserControlWithDataGrid>
